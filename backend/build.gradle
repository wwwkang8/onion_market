plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.onion'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	// Spring Boot and JPA dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.33' // MySQL driver
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT API
	implementation 'com.zaxxer:HikariCP:5.0.1' // HikariCP for connection pooling

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.fasterxml.jackson.core:jackson-databind'  // Spring Boot JSON 직렬화 (Redis에 객체 저장 시 필요)
	// Spring Boot Cache 지원 (선택 사항)
	implementation 'org.springframework.boot:spring-boot-starter-cache'


	// JWT runtime dependencies
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // For JSON processing in JWT

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('compileJava') {
	options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
	useJUnitPlatform()
}
